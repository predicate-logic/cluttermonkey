-- own/create new schemas for standard raw->stage->schema heirarchy.

-- -- clean up
-- drop schema if exists clutter cascade;
-- drop schema if exists clutter_stage cascade;
-- drop schema if exists clutter_raw cascade;
-- 
-- drop group clutter_etl_grp;
-- drop group clutter_ro_grp;
-- 
-- drop user if exists clutter_raw;
-- drop user if exists clutter_stage;
-- drop user if exists clutter_etl;
-- drop user if exists clutter_ro;
-- drop user if exists clutter;

-- schema owners
-- SCRIPT WILL FAIL AT THIS POINT UNLESS ...
create user clutter password 'password';
create user clutter_raw password 'password';
create user clutter_stage password 'password';
create user clutter_etl password 'password';
create user clutter_ro password 'password';

-- set search_path for users
alter user clutter set search_path=clutter_raw,clutter_stage,clutter;
alter user clutter_stage set search_path=clutter_raw,clutter_stage,clutter;
alter user clutter_raw set search_path=clutter_raw,clutter_stage,clutter;
alter user clutter_etl set search_path=clutter_raw,clutter_stage,clutter;
alter user clutter_ro set search_path=clutter;

-- create schemas
create schema clutter authorization clutter;
create schema clutter_raw authorization clutter_raw;
create schema clutter_stage authorization clutter_stage;

-- revoke access to schemas from public just in case
revoke all on schema clutter from public;
revoke all on schema clutter_raw from public;
revoke all on schema clutter_stage from public;

-- create group for etl
create group clutter_etl_grp;
create group clutter_ro_grp;

-- add to group
alter group clutter_etl_grp add user clutter;
alter group clutter_etl_grp add user clutter_stage;
alter group clutter_etl_grp add user clutter_raw;
alter group clutter_etl_grp add user clutter_etl;
alter group clutter_ro_grp add user clutter_ro;

-- group schema grants
grant all on schema clutter to group clutter_etl_grp;
grant all on schema clutter_raw to group clutter_etl_grp;
grant all on schema clutter_stage to group clutter_etl_grp;
grant usage on schema clutter to group clutter_ro_grp;
grant usage on schema clutter_raw to group clutter_ro_grp;
grant usage on schema clutter_stage to group clutter_ro_grp;

-- group default privs
alter default privileges in schema clutter grant select, insert, update, delete, references on tables to group clutter_etl_grp;
alter default privileges in schema clutter grant select on tables to group clutter_ro_grp;
alter default privileges in schema clutter_stage grant select, insert, update, delete, references on tables to group clutter_etl_grp;
alter default privileges in schema clutter_raw grant select, insert, update, delete, references on tables to group clutter_etl_grp;

-- production tables
--drop table clutter_raw.events cascade;
create table clutter_raw.events (
   pk bigint generated by default as identity primary key,
   event jsonb,
   created_at timestamp with time zone not null default now()
);

-- grants
grant all on clutter_raw.events to clutter_etl_grp;
grant select on clutter_raw.events to clutter_ro_grp;

-- staging views 
-- drop view clutter_stage.v_events;
create or replace view clutter_stage.v_events as
select
   pk,
   event ->> 'id' id,
   (event ->> 'bot')::boolean bot,
   event ->> 'server_name' server_name,
   event ->> 'server_url' server_url,
   to_timestamp((event ->> 'timestamp')::bigint) edit_ts,
   event ->> 'title' title,
   event ->> 'type' edit_type,
   event ->> 'user' username,
   event ->> 'wiki' wiki,
   created_at
from clutter_raw.events;

-- grants
grant select on clutter_stage.v_events to clutter_etl_grp;
grant select on clutter_stage.v_events to clutter_ro_grp;

-- indexes
create index i_events_username on clutter_raw.events using gin((event->'user'));
create index i_events_wiki on clutter_raw.events using gin((event->'wiki'));
create index i_events_created_at on clutter_raw.events using brin(created_at);
